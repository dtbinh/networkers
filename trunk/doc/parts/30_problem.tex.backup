\section{Feladat pontosítása}

\hspace{2em}
Mivel jelen esetben nem feltétlenül egyértelmû, hogy mi is a feladat, ezért ennek tisztázása elkerülhetetlen.
Adott egy sík, melyen elõre nem ismert helyeken olyan egységek vannak (kliens pontok), melyek nem tudnak kommunikálni egymással.
A cél egy olyan kommunikációs réteg kialakítása, melynek segítségével ezen pontok egymással kapcsolatba léphetnek.
% a ként fogok hivatkozni.

A kliens pontok idõvel akár meg is szûnhetnek, ezért az algoritmusnak meg kell tudni birkóznia a változó világgal, melyben ezen pontok megszûnhetnek vagy meghibásodhatnak.

A feladat megoldásához azonos felépítésû autonóm hálózati eszközök (networkerek) állnak rendelkezésre, melyek egy adott sugáron belül megbízhatóan tudnak kommunikálni. Helyváltoztatásra képesek, de az elérhetõ maximális sebesség korlátozott. Ezen robotok egy starthelyrõl indulnak, ahol mindannyian egymás kommunikációs távolságán belül helyezkednek el.
Az \ref{start} ábrán látható egy elképzelt kezdeti állapot. A networkerek semmilyen információval nem rendelkeznek a kliens pontokról, de a céljuk, hogy valamilyen hálózatot építsenek ki azok közé (\ref{start2}).


\begin{figure}[h!]
% \begin{figure}[h]
\vspace{-0.5em}
\centering
\subfloat[Kezdeti állapot]{
	\psfrag{START}[cc][cc]{kezdõpont}
	\psfrag{CP}[cc][cc]{kliens pontok}
\includegraphics[width=.45\textwidth]{dia/problem}
\vspace{-0.5em}
\label{start}
}
\subfloat[Egy lehetséges hálózat]{
% 	\psfrag{START}[cc][cc]{kezdõpont}
% 	\psfrag{CP}[cc][cc]{kliens pontok}
\includegraphics[width=.45\textwidth]{dia/problem_2}
\vspace{-0.5em}
\label{start2}
}

\caption{\textit{Szituáció}}
% \end{figure}
\end{figure}

% \ref{start}
% \XFIGG{0.33}{dia/problem}{start}{Kezdet}{
% 	\psfrag{START}[cc][cc]{kezdõpont}
% 	\psfrag{CP}[cc][cc]{kliens pontok}
% }
% 
% \XFIGG{0.33}{dia/problem}{start}{Kezdet}{
% 	\psfrag{START}[cc][cc]{kezdõpont}
% 	\psfrag{CP}[cc][cc]{kliens pontok}
% }

Feltételezem, hogy a rendelkezésre álló eszközökön a memória korlátos, ezért a megoldó algoritmus nem használhat fel tetszõleges mennyiségût ebbõl az erõforrásból. Így csupán csak lokális információkra alapozhatóak az ágensek által meghozott döntések. 

% A feladat megoldásához autonóm robotok állnak rendelkezésre melyek egy starthelyrõl indulnak. 

% CSÚSSZON ÁT A KÖV OLDALRA

A robotok az alábbi fontos jellemzõkkel rendelkeznek:

\xparagraph{Azonosítás:} Mindegyik egység rendelkezik egy saját azonosítóval, mely garantáltan nincs kiosztva mégegyszer a bolyon (ezalatt az összes robot értendõ) belül.

\xparagraph{Látókör:}
A robotok rendelkeznek egy korlátozott látókörrel ($R$), mely funkcióját egy valódi alkalmazásnál egy szonár vagy egy radar láthatná el. A kommunikáció szoros összefüggésben áll a látókörrel. Két egység között akkor és csak akkor zajlik le a kommunikáció hiba nélkül, ha azok látják egymást.


\xparagraph{Mobilitás:}
Az egységek minden lépésben bármelyik irányba képesek maximálisan $v_{max}$ sebességgel a pozíciójuk megváltoztatására.
% Az egységek képesek a pozíciójuk megváltoztatására. Minden lépésben maximálisan $v_{max}$-al bármely irányba megváltoztathatják a helyzetüket.

\xparagraph{Közös óra:} A szimuláció egyszerre kezdõdik minden résztvevõ robot számára és mindannyiuk órája a $0$-n áll.

\xparagraph{Összefüggõség:} Ha a robotkra úgy tekintünk mint pontokra és minden olyan csúcspárt, amely $<R$ távolságra van egymástól összekötünk, akkor egy összefüggõ gráfot kapunk.

\xparagraph{Kommunikációs sebesség:} Minden információ pontosan egy idõegység alatt ér el a küldõtõl a cím\-zett\-hez.

\xparagraph{Körökre osztott világ} Az összes networker egy idõegység alatt egyet lép.

% \vspace{1em}
\newpage
\subsection{Steiner-fa}
% \MEGJ
Átfoglamazva a felvetett problémát a matematika nyelvére: ``adott a síkon k darab pont, keressük azt a minimális élköltségû fát, mely lefedi az összes pontot'', ez a probléma az euklideszi Steiner-fa probléma néven vált ismertté - és az NP-nehéz feladatok körébe tartozik, így a kiépülõ kezdetleges gráf javításához olyan módszereket kell bevetni, ami Steiner fa elõállítását segíti elõ.
%  - amennyiben ez lehetséges.


\XFIG{0.5}{dia/problem_p2}{st00}{Terminálisok ($T$)}
Legyen $T$ a terminális pontok halmaza(\ref{st00}. ábra) melyeket szeretnénk lefedni egy euklideszi Steiner-fával.

Ezen pontokra valamilyen módszer felhasználásával meghatározhatjuk a minimális Steiner-fát ($S_T$) mely lefedi ezen pontokat (\ref{st01}. ábra).
\XFIG{0.5}{dia/problem_2}{st01}{A $T$-t lefedõ $S_T$ Steiner-fa}

% \MEGJ: ilyen esetekben amennyiben ismert a $T$ halmaz a legjobb általam ismert létezo algoritmus a GeoSteiner algoritmus \cite{} mely lineáris programozás felhasználásával oldja meg a feladatot.
% az euklideszi Steiner-fa NP-nehézsége miatt ennek meghatározása a $T$ halmaz méretétõl függõen 

\newpage
Mivel a felvetett  probléma esetében ez a $T$ terminálishalmaz akár meg is változhat idõvel, ezért érdemes megvizsgálni aztm, hogy mi történik ha már ismert egy $T$ terminálishalmaz Steinerfája, és ez esetlegesen hogyan viszonyul egy olyan $T'$ terminálisokat lefedõ $S_{T'}$ fához mely az eredeti $T$ terminálishalmaznak egy ponttal való bõvítése.

Ennek a szemléltetéséhez a korábbi fát kõvítem egy új ponttal (\ref{st10}. ábra).


\XFIG{0.5}{dia/problem_2pw}{st10}{új pont felvétele}

Amennyiben az így létrejött $T'$ terminálishalmazra újra megkeressük az optimális Steiner-fát, abban az esetben a $T'$-höz tartozó $S_{T'}$ fa erõsen eltérhet a $T$ termina;liscsoporthoz tartozó $S_T$ fától.

Ezt illusztrálja a \ref{st11}. ábrán látható kék vonalak, melyek az új fa élei.

\XFIG{0.5}{dia/problem_2px}{st10}{A $T'$-t lefedõ $S_T'$ Steiner-fa}


\MEGJ	Az optimális Steiner-fa ilyen módon való keresése igényli a teljes $T$ halmaz ismeretét, valamint a felvetett probléma megkövetelne valamilyen átmenetet egy-egy új pont felfedezése közben.

\newpage
% Ezekbõl látszik hogy

Egy olyan módszer segítségével kell majd a hálózatot felépíteni mely megengedi az iterativ bõvítést és fokozatosan képes közelíteni a Steiner-fa megoldását anélkül hogy a fa megszakadna.

A Steiner-fa probléma megoldása megközelíthetõ heurisztikus algoritmusok segítsegével, ezek közül kiemelném a Steiner Insertion Heuristic nevû \cite{Dreyer98twoheuristics} algoritmust, mely egy picit módosítva egy Steiner-fa bõvítõvé alakítható át.

\xparagraph{steiner\_insertion(T,E)}
\begin{enumerate}
	\item	legkönyebb feszítõfa megkeresése a $T$-n
	\item	minden élre mely terminálisokat köt össze $(t_x,t_y)$-ra:
	\begin{enumerate}
		\item	egy olyan $q$ csúcs keresése mely vagy terminális vagy Steiner-pont,
			valamint létezik a $(q,t_x)$ él és ezen élek közül a legkisebb szöget zárja be a $(t_x,t_y)$ éllel.
		\item	amennyiben a $(q,t_x),(t_x,t_y)$ élek szöge kisebb mint $120$ fok
		\begin{enumerate}
			\item	új steiner pont felvétele ($s$) a $t_x$ pozíciójába
			\item	élek eltávolítása:
			\begin{itemize}
			 		\item	$(q,t_x)$
					\item	$(t_x,t_y)$
			\end{itemize}
			\item	új élek felvétele:
			\begin{itemize}
			 		\item	$(s,q)$
			 		\item	$(s,t_x)$
					\item	$(s,t_y)$
			\end{itemize}
		\end{enumerate}
		\item	lokális optimalizáció
	\end{enumerate}
\end{enumerate}

Alap esetben ez az algoritmus egy közelítést ad a $T$ ponthalmaz Steiner-fával való lefedésére. Amennyiben úgy módosítjuk hogy csak bõvítsen egy korábbi fát, akkor azzal már úgy közelíthetjük az új fát hogy a régit részben megtartjuk.

Egy nagyon nagy elõnye ennek a módszernek hogy amennyiben úgy tekintünk az egyes csúcsokra mint entitások, s az élet mint szomszédsági kapcsolat akkor a fenti algoritmus bizonyos formában lokálisnak tekinthetõ.


% Amennyiben az algoritmust nem üres 
	

% \begin{tabbing}
% \hspace{2em}\=1.	\\
% \>2. 
% \>\hspace{2em}\=
% \end{tabbing}




% Ezek 

% A Steiner fák 








%                         \includegraphics<1>[width=.9\textwidth]{dia/problem_p2}
%                         \includegraphics<2-3>[width=.9\textwidth]{dia/problem_2}
%                         \includegraphics<4>[width=.9\textwidth]{dia/problem_2pw}
%                         \includegraphics<5->[width=.9\textwidth]{dia/problem_2px}



\newpage
